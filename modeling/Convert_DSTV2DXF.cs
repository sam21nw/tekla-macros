// Generated by Tekla.Technology.Akit.ScriptBuilder

using System.IO;
using System.Windows.Forms;
using Tekla.Structures;
using Tekla.Structures.Model;

namespace Tekla.Technology.Akit.UserScript 
{
	public class Script 
	{
		/**** Modify these strings to suit local environment and user preferences ****/
			private static string defFile = "tekla_dstv2dxf_metric.def";
            private static string exeFile = "tekla_dstv2dxf.exe";
			private static string dxfOutputFolder = "NC_dxf";
		/*****************************************************************************/


		public static void Run(Tekla.Technology.Akit.IScript akit) 
		{
			string modelDir;
			string dstvDir;
            string XS_Variable = System.Environment.GetEnvironmentVariable("XS_DIR");

			try
			{
				Model Model = new Model();

				/** Get model directory **/
				modelDir = new System.IO.DirectoryInfo("./").FullName;

                /** Check for existence of dstv2dxf.exe **/
                if (System.IO.File.Exists(@XS_Variable + @"\nt\dstv2dxf\" + defFile))
                    dstvDir = @XS_Variable + @"\nt\dstv2dxf\";
                else
                {
					System.Windows.Forms.MessageBox.Show("The conversion definition file " + defFile + " and/or the dstv2dxf directory could not be found.\n\npleases modify the macro script to point to the correct directory.");
					return;
				}

				/** Copy dstv2dxf.exe to the model folder **/
                if (!System.IO.File.Exists(@modelDir + exeFile))
				    new System.IO.FileInfo(@dstvDir + "tekla_dstv2dxf.exe").CopyTo(@modelDir + "tekla_dstv2dxf.exe",true);

				/** Generate the "model local" version of the def file **/
				System.IO.StreamReader sr = new System.IO.StreamReader(@dstvDir + defFile, System.Text.Encoding.Default);
				System.IO.StreamWriter sw = new System.IO.StreamWriter(@modelDir + defFile,false,System.Text.Encoding.Default);
				string line=" ";
				while((line=sr.ReadLine())!=null)
				{
					if(line.Trim().IndexOf("INPUT_FILE_DIR")>=0)
						sw.WriteLine("INPUT_FILE_DIR=");
					else if(line.Trim().IndexOf("OUTPUT_FILE_DIR")>=0)
						sw.WriteLine("OUTPUT_FILE_DIR="+@modelDir+dxfOutputFolder);
					else	
						sw.WriteLine(line);
				}
				sw.Flush();
				sw.Close();

				/** Check for dxfOutputFolder. Creat it if it doesn't exist **/
				if(!System.IO.Directory.Exists(@modelDir+dxfOutputFolder))
					System.IO.Directory.CreateDirectory(@modelDir+dxfOutputFolder);

				/** Launch the local dstv2dxf **/
				System.Diagnostics.Process NCDXFConv = new System.Diagnostics.Process();
                NCDXFConv.EnableRaisingEvents = false;
				NCDXFConv.StartInfo.CreateNoWindow=true;
				NCDXFConv.StartInfo.WindowStyle=System.Diagnostics.ProcessWindowStyle.Hidden;
                NCDXFConv.StartInfo.FileName = @modelDir + "tekla_dstv2dxf.exe";
                NCDXFConv.StartInfo.Arguments = " -cfg " + defFile + " -m batch";             
                NCDXFConv.Start();
                NCDXFConv.WaitForExit();
                NCDXFConv.Close();
                
				if (System.Windows.Forms.MessageBox.Show("Do you want to open the folder, which contains the DXF files?","Tekla Structures", System.Windows.Forms.MessageBoxButtons.YesNo,System.Windows.Forms.MessageBoxIcon.Question,System.Windows.Forms.MessageBoxDefaultButton.Button2) == System.Windows.Forms.DialogResult.Yes)
				{
					/** Open a file explorer window in the output folder **/
					System.Diagnostics.Process Explorer = new System.Diagnostics.Process();
					Explorer.EnableRaisingEvents=false;
					Explorer.StartInfo.FileName="explorer";
					Explorer.StartInfo.Arguments="\""+@modelDir+dxfOutputFolder+"\"";
					Explorer.Start();
				}
               
			}
			/** This little section will report any errors that may happen during run-time, and even tell you what line of code the error happened at **/
			catch (System.Exception e)
			{
				System.Windows.Forms.MessageBox.Show("Problem runing process\n" + e.Message + "\n" + e.StackTrace);
			}
		}
	}
}